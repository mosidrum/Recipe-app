require 'rails_helper'

RSpec.describe Food, type: :model do
  let(:food) { Food.new(name: 'Apple', measurement_unit: 'lb') }

  it 'is invalid when name is not present' do
    food.name = nil
    expect(food).to_not be_valid
  end

  it 'is invalid when measurement unit is not present' do
    food.measurement_unit = nil
    expect(food).to_not be_valid
  end

  it 'displays name and measurement unit together' do
    expect(food.name_with_measurement_unit).to eq 'Apple (lb)'
  end

  it 'is invalid when name is too short (less than 2 characters)' do
    food.name = 'A'
    expect(food).to_not be_valid
  end

  it 'is invalid when name is too long (more than 50 characters)' do
    food.name = 'a' * 51
    expect(food).to_not be valid
  end

  it 'is invalid when price is not present' do
    food.price = nil
    expect(food).to_not be_valid
  end

  it 'is invalid when price is negative' do
    food.price = -1
    expect(food).to_not be_valid
  end

  it 'is invalid when quantity is not present' do
    food.quantity = nil
    expect(food).to_not be_valid
  end

  it 'is invalid when quantity is negative' do
    food.quantity = -1
    expect(food).to_not be_valid
  end
end
